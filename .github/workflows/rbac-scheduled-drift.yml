name: RBAC Scheduled Drift Monitor

on:
  schedule:
    # Run weekly on Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  rbac-weekly-drift:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      RBAC_ENFORCEMENT: dry-run
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          
      - name: Install dependencies
        run: npm ci
        
      - name: RBAC Drift Analysis
        id: drift-analysis
        run: |
          echo "Starting weekly RBAC drift analysis..."
          npm run rbac:drift
          echo "drift_exit_code=$?" >> $GITHUB_OUTPUT
        continue-on-error: true
        
      - name: RBAC Guard Compliance Check
        id: guard-check
        run: |
          echo "Checking guard compliance..."
          npm run rbac:lint
          echo "guard_exit_code=$?" >> $GITHUB_OUTPUT
        continue-on-error: true
        
      - name: Generate Weekly Report
        id: weekly-report
        run: |
          echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "week_start=$(date -u -d 'last monday' +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          
          # Create comprehensive weekly report
          cat > rbac-weekly-report.md << EOF
          # 🛡️ RBAC Weekly Drift Report
          
          **Report Period**: ${{ steps.weekly-report.outputs.week_start }} to $(date -u +'%Y-%m-%d')
          **Generated**: ${{ steps.weekly-report.outputs.timestamp }}
          
          ## 📊 Weekly Summary
          
          ### Drift Analysis
          - **Status**: ${{ steps.drift-analysis.outputs.drift_exit_code == '0' && '✅ HEALTHY' || '🚨 ISSUES DETECTED' }}
          - **Exit Code**: ${{ steps.drift-analysis.outputs.drift_exit_code }}
          
          ### Guard Compliance
          - **Status**: ${{ steps.guard-check.outputs.guard_exit_code == '0' && '✅ COMPLIANT' || '🚨 NON-COMPLIANT' }}
          - **Exit Code**: ${{ steps.guard-check.outputs.guard_exit_code }}
          
          ## 🔍 Detailed Findings
          
          ### Permission Drift
          - **P0 Critical Issues**: ${{ steps.drift-analysis.outputs.drift_exit_code != '0' && 'DETECTED' || 'NONE' }}
          - **P2 Low Priority Issues**: Review detailed drift report
          
          ### Guard Coverage
          - **Critical Paths**: Review detailed guard lint report
          - **Compliance Rate**: See guard lint report for details
          
          ## 📈 Trends & Recommendations
          
          ### This Week's Changes
          - Review any new permissions added
          - Check for new API endpoints requiring guards
          - Verify role assignments for new users
          
          ### Next Week's Actions
          - Address any P0 issues immediately
          - Review P2 issues for cleanup opportunities
          - Update documentation if needed
          
          ---
          *Report generated by RBAC Weekly Drift Monitor*
          EOF
          
      - name: Upload Weekly Reports
        uses: actions/upload-artifact@v4
        with:
          name: rbac-weekly-reports-${{ steps.weekly-report.outputs.timestamp }}
          path: |
            docs/rbac_drift_report.md
            docs/rbac_guard_lint.md
            rbac-weekly-report.md
            
      - name: Create Weekly Summary Issue
        if: steps.drift-analysis.outputs.drift_exit_code != '0' || steps.guard-check.outputs.guard_exit_code != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let body = '## 📅 RBAC Weekly Drift Summary\n\n';
            body += '**Week of**: ' + '${{ steps.weekly-report.outputs.week_start }}' + '\n';
            body += '**Generated**: ' + '${{ steps.weekly-report.outputs.timestamp }}' + '\n\n';
            
            body += '## 🚨 Issues Requiring Attention\n\n';
            
            if ('${{ steps.drift-analysis.outputs.drift_exit_code }}' !== '0') {
              body += '- **Drift Analysis**: Issues detected - review drift report\n';
            }
            
            if ('${{ steps.guard-check.outputs.guard_exit_code }}' !== '0') {
              body += '- **Guard Compliance**: Issues detected - review guard lint report\n';
            }
            
            body += '\n## 📋 Required Actions\n\n';
            body += '1. **Review detailed reports** in workflow artifacts\n';
            body += '2. **Address P0 issues** immediately if any\n';
            body += '3. **Plan P2 cleanup** for next sprint\n';
            body += '4. **Update documentation** if needed\n\n';
            
            body += '## 🔧 Quick Commands\n\n';
            body += '```bash\n';
            body += 'npm run rbac:drift    # Check current drift status\n';
            body += 'npm run rbac:lint     # Check guard compliance\n';
            body += 'npm run rbac:fix:simple # Apply permission fixes\n';
            body += '```\n\n';
            
            body += '---\n';
            body += '**Workflow**: [${{ github.workflow }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})';
            
            // Create issue
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '📅 RBAC Weekly Drift Summary - Action Required',
              body: body,
              labels: ['rbac', 'weekly', 'monitoring', 'drift']
            });
            
            console.log(`Created weekly summary issue #${issue.data.number}`);
            
      - name: Success Notification
        if: steps.drift-analysis.outputs.drift_exit_code == '0' && steps.guard-check.outputs.guard_exit_code == '0'
        run: |
          echo "✅ RBAC Weekly Drift Monitor: All checks passed - system is healthy"
          echo "Week of: ${{ steps.weekly-report.outputs.week_start }}"
          echo "Timestamp: ${{ steps.weekly-report.outputs.timestamp }}"
