name: RBAC Monitor

on:
  schedule:
    # Run every 6 hours during business hours (UTC)
    - cron: '0 */6 * * 1-5'
  workflow_dispatch:

jobs:
  rbac-monitor:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      RBAC_ENFORCEMENT: dry-run
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: RBAC Drift Check
        id: drift-check
        run: |
          npm run rbac:drift
          echo "drift_exit_code=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: RBAC Guard Lint
        id: guard-lint
        run: |
          npm run rbac:lint
          echo "guard_exit_code=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Generate Monitoring Report
        id: report
        run: |
          echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "drift_status=${{ steps.drift-check.outputs.drift_exit_code }}" >> $GITHUB_OUTPUT
          echo "guard_status=${{ steps.guard-lint.outputs.guard_exit_code }}" >> $GITHUB_OUTPUT

          # Create summary report
          cat > rbac-monitor-summary.md << EOF
          # 🛡️ RBAC Monitor Report

          **Generated**: ${{ steps.report.outputs.timestamp }}
          **Drift Check**: ${{ steps.drift-check.outputs.drift_exit_code == '0' && '✅ PASSED' || '❌ FAILED' }}
          **Guard Lint**: ${{ steps.guard-lint.outputs.guard_exit_code == '0' && '✅ PASSED' || '❌ FAILED' }}

          ## Status
          - **Overall**: ${{ (steps.drift-check.outputs.drift_exit_code == '0' && steps.guard-lint.outputs.guard_exit_code == '0') && '✅ HEALTHY' || '🚨 ISSUES DETECTED' }}

          ## Actions Required
          ${{ (steps.drift-check.outputs.drift_exit_code != '0' || steps.guard-lint.outputs.guard_exit_code != '0') && 'Review the detailed reports below and take corrective action.' || 'No action required. RBAC system is healthy.' }}

          ---
          *Report generated by RBAC Monitor workflow*
          EOF

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: rbac-monitor-reports-${{ steps.report.outputs.timestamp }}
          path: |
            docs/rbac_drift_report.md
            docs/rbac_guard_lint.md
            rbac-monitor-summary.md

      - name: Create Issue on Failure
        if: steps.drift-check.outputs.drift_exit_code != '0' || steps.guard-lint.outputs.guard_exit_code != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let body = '## 🚨 RBAC Monitor Alert\n\n';
            body += '**Issue Detected**: RBAC monitoring has identified problems that require attention.\n\n';
            body += '**Timestamp**: ' + '${{ steps.report.outputs.timestamp }}' + '\n';
            body += '**Drift Check**: ' + ('${{ steps.drift-check.outputs.drift_exit_code }}' === '0' ? '✅ PASSED' : '❌ FAILED') + '\n';
            body += '**Guard Lint**: ' + ('${{ steps.guard-lint.outputs.guard_exit_code }}' === '0' ? '✅ PASSED' : '❌ FAILED') + '\n\n';

            body += '## 📋 Required Actions\n\n';
            body += '1. **Review the detailed reports** in workflow artifacts\n';
            body += '2. **Investigate the root cause** of the RBAC issues\n';
            body += '3. **Apply fixes** using the appropriate RBAC scripts\n';
            body += '4. **Verify resolution** by re-running the monitor\n\n';

            body += '## 🔧 Quick Fix Commands\n\n';
            body += '```bash\n';
            body += 'npm run rbac:drift    # Check current drift status\n';
            body += 'npm run rbac:lint     # Check guard compliance\n';
            body += 'npm run rbac:fix:simple # Apply permission fixes\n';
            body += '```\n\n';

            body += '---\n';
            body += '**Workflow**: [${{ github.workflow }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})';

            // Create issue
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 RBAC Monitor Alert - Action Required',
              body: body,
              labels: ['rbac', 'security', 'monitoring', 'urgent']
            });

            console.log(`Created issue #${issue.data.number} for RBAC alert`);

      - name: Success Notification
        if: steps.drift-check.outputs.drift_exit_code == '0' && steps.guard-lint.outputs.guard_exit_code == '0'
        run: |
          echo "✅ RBAC Monitor: All checks passed - system is healthy"
          echo "Timestamp: ${{ steps.report.outputs.timestamp }}"
