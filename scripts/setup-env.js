/**
 * Interactive setup script for .env.local
 * Run: node scripts/setup-env.js path/to/your-service-account.json
 */

const fs = require('fs');
const path = require('path');

const jsonFilePath = process.argv[2];

if (!jsonFilePath) {
  console.log('\nüìã Setup Google Service Account Environment Variables\n');
  console.log('Usage: node scripts/setup-env.js path/to/your-service-account.json\n');
  console.log('Example:');
  console.log('  node scripts/setup-env.js ~/Downloads/nth-segment-475411-g1-abc123.json');
  console.log('\nüí° Don\'t have the JSON file? Get it from:');
  console.log('  https://console.cloud.google.com/iam-admin/serviceaccounts?project=nth-segment-475411-g1');
  console.log('  ‚Üí Click "contract-generator"');
  console.log('  ‚Üí Keys tab');
  console.log('  ‚Üí Add Key ‚Üí Create new key ‚Üí JSON\n');
  process.exit(1);
}

try {
  // Read and validate JSON file
  const jsonContent = fs.readFileSync(path.resolve(jsonFilePath), 'utf8');
  const credentials = JSON.parse(jsonContent);
  
  // Validate required fields
  if (!credentials.type || credentials.type !== 'service_account') {
    throw new Error('Invalid service account JSON file');
  }
  
  if (!credentials.project_id || !credentials.private_key || !credentials.client_email) {
    throw new Error('JSON file is missing required fields');
  }
  
  console.log('\n‚úÖ Valid service account JSON found!');
  console.log(`   Project: ${credentials.project_id}`);
  console.log(`   Email: ${credentials.client_email}\n`);
  
  // Create .env.local content
  const envContent = `# Google Service Account Configuration
# Generated by setup-env.js on ${new Date().toISOString()}

# Service Account JSON Key
GOOGLE_SERVICE_ACCOUNT_KEY='${jsonContent.replace(/\n/g, '')}'

# Google Docs Template ID
GOOGLE_DOCS_TEMPLATE_ID=1dG719K4jYFrEh8O9VChyMYWblflxW2tdFp2n4gpVhs0
`;

  // Write to .env.local
  const envPath = path.join(process.cwd(), '.env.local');
  
  if (fs.existsSync(envPath)) {
    console.log('‚ö†Ô∏è  .env.local already exists. Creating backup...');
    fs.copyFileSync(envPath, envPath + '.backup');
    console.log('   Backup saved as .env.local.backup\n');
  }
  
  fs.writeFileSync(envPath, envContent);
  
  console.log('‚úÖ .env.local created successfully!\n');
  console.log('üìã Next steps:');
  console.log('   1. Share your template with the service account:');
  console.log(`      Email: ${credentials.client_email}`);
  console.log('      Template: https://docs.google.com/document/d/1dG719K4jYFrEh8O9VChyMYWblflxW2tdFp2n4gpVhs0/edit');
  console.log('      Permission: Editor');
  console.log('\n   2. Restart your dev server:');
  console.log('      npm run dev');
  console.log('\n   3. Test the setup:');
  console.log('      Visit: http://localhost:3000/api/test-google-sa');
  console.log('\n');
  
} catch (error) {
  console.error('\n‚ùå Error:', error.message);
  console.log('\nTroubleshooting:');
  console.log('  - Make sure the file path is correct');
  console.log('  - Verify the JSON file is valid');
  console.log('  - Check that you downloaded the right file from Google Cloud Console\n');
  process.exit(1);
}

